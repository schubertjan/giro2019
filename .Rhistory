?Encoding
m <- extract_tables("~/Garibaldi_Giro_italia_2019_low_res.pdf", pages = c(17, 18), encoding = "utf8")
library(tabulizer)
m <- extract_tables("~/Garibaldi_Giro_italia_2019_low_res.pdf", pages = c(17, 18), encoding = "utf8")
m2 <- do.call(m, cbind)
m2 <- do.call(cbind, m)
m2
m2 <- apply(m2,2,trimws)
m2
m2 <- apply(m2,2,function(x) gsub(" ", "", x))
m2
m2 <- apply(m2,2,function(x) gsub(",", ".", x))
m2
m2 <- apply(m2,2,function(x) gsub("%", "", x))
m2
col_names <- m2[1, ]
col_names
df <- data.frame(m2)
df <- data.frame(m2[-1, ])
colnames(df) <- col_names
df
useabove <- function(x){
for(i in 2:length(x)){
if(is.null(x[i]) | is.na(x[i]) | x[i] == "") x[i] <- x[i-1]
}
}
colnames(df) <- tolower(col_names)
df$tappa <- apply(df$tappa,2,useabove)
df$tappa <- useabove(df$tappa)
df
df <- data.frame(m2[-1, ])
colnames(df) <- tolower(col_names)
df
useabove(df$tappa)
useabove <- function(x){
for(i in 2:length(x)){
if(is.null(x[i]) | is.na(x[i]) | x[i] == "") x[i] <- x[i-1]
}
return(x)
}
useabove(df$tappa)
df$tappa <- useabove(df$tappa)
df
col_names
str(df)
df[, -c(2:4, 8)] <- apply(df[, -c(2:4, 8)], 2, as.numeric)
df
str(df)
df <- data.frame(m2[-1, ])
colnames(df) <- tolower(col_names)
df[, c(1, 2, 3)] <- apply(df[, c(1, 2, 3)], 2, useabove)
df[, -c(2:5, 8)] <- apply(df[, -c(2:4, 8)], 2, as.numeric)
df
climbs <- df
devtools::use_data(climbs)
library(ggplot2)
plot(0,2100)
abline(lm(c(0,2100) ~ c(1,2)))
plot(x,y)
abline(lm(y~x))
y <- c(0,204)
x <- c(0,2100)
plot(x,y)
abline(lm(y~x))
plot(x,y, type = "n")
abline(lm(y~x))
plot(x,y, type = "n")
jitter(abline(lm(y~x)), factor = 0.1)
y <- c(0,204)
x <- c(0,2.100)
plot(x,y, type = "n")
jitter(abline(lm(y~x)), factor = 0.1)
plot(x,y, type = "n", xlab = "Distance (km)", ylab = "Elevantion Diff.(m)")
abline(lm(y~x))
dim(climbs)
?par
climbs <- climbs[!is.na(climbs$`disl.(m)`), ]
dim(climbs)
par(mfrow = c(10,4), par = c(2,3,2,3))
x <- lapply(1:nrow(climbs), function(i) {
y <- c(0, climbs$p.med[i])
x <- c(0, climbs$`lungh.(km)`[i])
plot(x,y,
type = "n",
xlab = "Distance (km)",
ylab = "Elevantion Diff.(m)",
xlim = c(0,max(climbs$`lungh.(km)`) * 1.05),
ylim = c(0,max(climbs$p.med) * 1.05))
abline(lm(y~x))
})
par(mfrow = c(10,4), par = c(2,3,2,3))
x <- lapply(1:nrow(climbs), function(i) {
y <- c(0, climbs$p.med[i])
x <- c(0, climbs$`lungh.(km)`[i])
plot(x,y,
type = "n",
xlab = "Distance (km)",
ylab = "Elevantion Diff.(m)",
xlim = c(0,max(climbs$`lungh.(km)`) * 1.05),
ylim = c(0,max(climbs$p.med) * 1.05))
abline(lm(y~x))
})
devtools::use_vignette("Climbs")
library(giro2019)
climbs
i <- 1
climbs$`disl.(m)`[i]
?polygon
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
ggplot(data = climbs) +
geom_area(aes(x = c(0,climbs$`disl.(m)`), y = c(0, climbs$p.med[i]))) +
facet_wrap(~ gpm)
x_pol <- seq(x[1],x[2],length.out = 1000)
x_pol
climbs$cat
?plot
col_h
i <- 1
y <- c(0, climbs$p.med[i])
x <- c(0, climbs$`disl.(m)`[i])
x_pol <- seq(x[1],x[2],length.out = 10000)
y_pol <- seq(y[1],y[2], length.out = 10000)
#select colour
col_h <- "black"
if(climbs$cat == 2) {col_h <- "red"}
else if(climbs$cat == 3) {col_h <- "orange"}
i <- 1
y <- c(0, climbs$p.med[i])
x <- c(0, climbs$`disl.(m)`[i])
x_pol <- seq(x[1],x[2],length.out = 10000)
y_pol <- seq(y[1],y[2], length.out = 10000)
#select colour
col_h <- "black"
if(climbs$cat[i] == 2) {col_h <- "red"}
else if(climbs$cat[i] == 3) {col_h <- "orange"}
#create data
y <- c(0, climbs$p.med[i])
x <- c(0, climbs$`disl.(m)`[i])
x_pol <- seq(x[1],x[2],length.out = 10000)
y_pol <- seq(y[1],y[2], length.out = 10000)
#select colour
col_h <- "black"
if(climbs$cat[i] == 2) {col_h <- "red"} else
if(climbs$cat[i] == 3) {col_h <- "orange"} else
if(climbs$cat[i] == 4) {col_h <- "green"}
col_h
summary(climbs$tappa)
table(climbs$tappa)
par(mfrow = c(2,1))
plot(rnorm(100))
par(mfrow = c(2,1))
plot(rnorm(100))
plot(type = "n")
plot(0,0,type = "n")
plot(0,0,type = "n", axes = FALSE)
plot(type = "n")
plot(0,0,type = "n", axes = FALSE)
plot(rnorm(100))
plot(NULL,NULL,type = "n", axes = FALSE)
plot(0,0,type = "n", axes = FALSE,ann = FALSE)
plot(rnorm(100))
climbs_l <- split(climbs,climbs$tappa)
climbs_l
n <- lapply(climbs_l,length)
n
n <- lapply(climbs_l,nrow)
n
climbs_l <- split(climbs,climbs$tappa)
n <- lapply(climbs_l,function(x) nrow(x) + 1)
n
for(i in 1:length(climbs_l)){
if(n[i] != 6){
for(j in n[i]:5){
climbs_l[[i]][, j] <- NA
}
}
}
i
j
if(n[i] != 6
)
n[i] != 6
n[i]
for(i in 1:length(climbs_l)){
if(n[i] != 6){
for(j in n[[i]]:5){
climbs_l[[i]][, j] <- NA
}
}
}
climbs_l
climbs_l <- split(climbs,climbs$tappa)
n <- lapply(climbs_l,function(x) nrow(x) + 1)
for(i in 1:length(climbs_l)){
if(n[i] != 6){
for(j in n[[i]]:5){
climbs_l[[i]][j, ] <- NA
}
}
}
climbs_l
climbs_full
climbs_full <- do.call(rbind, climbs_l)
climbs_full
is.na(climbs_full$p.med) & !is.na(climbs_full$`disl.(m)`)
is.na(climbs_full$`disl.(m)`) & !is.na(climbs_full$p.med)
devtools::build_vignettes()
install.package("pkgdown")
install.packages("pkgdown")
library(devtools)
?build_vignettes
vignette("Climbs")
library(tabulizer)
m <- extract_tables("~/Garibaldi_Giro_italia_2019_low_res.pdf", pages = c(17, 18), encoding = "utf8")
m <- do.call(cbind,m)
m
m2 <- apply(m, 2, function(x) gsub(" ","",x))
m2
m2 <- apply(m, 2, function(x) gsub("%","",x))
m2 <- apply(m, 2, function(x) gsub(",",".",x))
m2
m2 <- apply(m, 2, function(x) gsub(" ","",x))
x
m
m2 <- apply(m, 2, function(x) gsub(" ","",x))
m2
m2 <- apply(m2, 2, function(x) gsub("%","",x))
m2
m2 <- apply(m2, 2, function(x) gsub(",",".",x))
m2
m2 <- m[-c(14, 15), ]
m2
m2 <- apply(m, 2, function(x) gsub(" ","",x))
m2 <- apply(m2, 2, function(x) gsub("%","",x))
m2 <- apply(m2, 2, function(x) gsub(",",".",x))
m2 <- m2[-c(14, 15), ]
m2
m2 <- apply(m2, 2, sameasabove)
sameasabove <- function(x) {
for(i in 2:length(x)) {
if(is.null(x[i]) | is.na(x[i]) | x[i] == "") x[i] <- x[i-1]
}
return(x)
}
m2 <- apply(m2, 2, sameasabove)
m2
col_names <- tolower(m2[1, ])
df <- m2[-1, ]
df
names(df) <- col_names
df
df <- m2[-1, ]
col_names <- tolower(m2[1, ])
col_names
colnames(df) <- col_names
df
str(df)
dim(df)
m2
df
df[, 2]
df[, 3]
df[, 6]
str(df)
df <- m2[-1, ]
str(df)
class(df)
df <- data.frame(m2[-1, ])
colnames(df) <- col_names
str(df)
df[, -c(2,3,4,8)] <- apply(df[, -c(2,3,4,8)], 2, as.numeric)
df
col_names <- tolower(m2[1, ])
df <- data.frame(m2[-1, ])
colnames(df) <- col_names
str(df)
df[, -c(2,3,4,5,8)] <- apply(df[, -c(2,3,4,5,8)], 2, as.numeric)
df
climbs <- df
library(giro2019)
climbs
devtools::use_data(climbs, overwrite = TRUE)
dim(climbs)
devtools::document()
devtools::check()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(giro2019)
par(mfrow = c(10,4), mar = c(2,2,2,2))
x <- lapply(1:nrow(climbs), function(i) {
#create data
x <- c(0, climbs$`lungh.(km)`[i])
y <- c(0, climbs$`disl.(m)`[i])
x_pol <- seq(x[1],x[2],length.out = 10000)
y_pol <- seq(y[1],y[2], length.out = 10000)
#select colour
col_h <- "black"
if(climbs$cat[i] == 2) {col_h <- "red"} else
if(climbs$cat[i] == 3) {col_h <- "orange"} else
if(climbs$cat[i] == 4) {col_h <- "green"}
#plot
plot(x_pol,y_pol,
type = "h",
col = col_h,
xlab = "Distance (km)",
ylab = "Elevantion Diff.(m)",
xlim = c(0,max(climbs$`lungh.(km)`) * 1.05),
ylim = c(0,max(climbs$`disl.(m)`) * 1.05),
main = paste0("Stage", climbs$tappa[i],"\n",climbs$gpm[i]),
cex.main = .8)
})
climbs_l <- split(climbs,climbs$tappa)
n <- lapply(climbs_l,function(x) nrow(x) + 1)
for(i in 1:length(climbs_l)){
if(n[i] != 6){
for(j in n[[i]]:5){
climbs_l[[i]][j, ] <- NA
}
}
}
climbs_full <- do.call(rbind, climbs_l)
par(mfrow = c(19,5), mar = c(2,2,2,2))
x <- lapply(1:nrow(climbs_full), function(i) {
#create data
x <- c(0, climbs$`lungh.(km)`[i])
y <- c(0, climbs$`disl.(m)`[i])
#if no data plot empty else plot climb
if(is.na(x[2])) {
plot(0,0,type = "n", axes = FALSE,ann = FALSE)
} else {
x_pol <- seq(x[1],x[2],length.out = 10000)
y_pol <- seq(y[1],y[2], length.out = 10000)
#select colour
col_h <- "black"
if(climbs_full$cat[i] == 2) {col_h <- "red"} else
if(climbs_full$cat[i] == 3) {col_h <- "orange"} else
if(climbs_full$cat[i] == 4) {col_h <- "green"}
#plot
plot(x_pol,y_pol,
type = "h",
col = col_h,
xlab = "Distance (km)",
ylab = "Elevantion Diff.(m)",
xlim = c(0,max(climbs$`lungh.(km)`) * 1.05),
ylim = c(0,max(climbs$`disl.(m)`) * 1.05),
main = paste0("Stage", climbs$tappa[i],"\n",climbs$gpm[i]),
cex.main = .85,
cex.axis = .8)
}
})
climbs_full
climbs_full$cat
library(giro2019)
par(mfrow = c(10,4), mar = c(2,2,2,2))
x <- lapply(1:nrow(climbs), function(i) {
#create data
x <- c(0, climbs$`lungh.(km)`[i])
y <- c(0, climbs$`disl.(m)`[i])
x_pol <- seq(x[1],x[2],length.out = 10000)
y_pol <- seq(y[1],y[2], length.out = 10000)
#select colour
col_h <- "black"
if(climbs$cat[i] == "2") {col_h <- "red"} else
if(climbs$cat[i] == "3") {col_h <- "orange"} else
if(climbs$cat[i] == "4") {col_h <- "green"}
#plot
plot(x_pol,y_pol,
type = "h",
col = col_h,
xlab = "Distance (km)",
ylab = "Elevantion Diff.(m)",
xlim = c(0,max(climbs$`lungh.(km)`) * 1.05),
ylim = c(0,max(climbs$`disl.(m)`) * 1.05),
main = paste0("Stage", climbs$tappa[i],"\n",climbs$gpm[i]),
cex.main = .8)
})
climbs_l <- split(climbs,climbs$tappa)
n <- lapply(climbs_l,function(x) nrow(x) + 1)
for(i in 1:length(climbs_l)){
if(n[i] != 6){
for(j in n[[i]]:5){
climbs_l[[i]][j, ] <- NA
}
}
}
climbs_full <- do.call(rbind, climbs_l)
par(mfrow = c(19,5), mar = c(2,2,2,2))
x <- lapply(1:nrow(climbs_full), function(i) {
#create data
x <- c(0, climbs$`lungh.(km)`[i])
y <- c(0, climbs$`disl.(m)`[i])
#if no data plot empty else plot climb
if(is.na(x[2])) {
plot(0,0,type = "n", axes = FALSE,ann = FALSE)
} else {
x_pol <- seq(x[1],x[2],length.out = 10000)
y_pol <- seq(y[1],y[2], length.out = 10000)
#select colour
col_h <- "black"
if(climbs_full$cat[i] == "2") {col_h <- "red"} else
if(climbs_full$cat[i] == "3") {col_h <- "orange"} else
if(climbs_full$cat[i] == "4") {col_h <- "green"}
#plot
plot(x_pol,y_pol,
type = "h",
col = col_h,
xlab = "Distance (km)",
ylab = "Elevantion Diff.(m)",
xlim = c(0,max(climbs$`lungh.(km)`) * 1.05),
ylim = c(0,max(climbs$`disl.(m)`) * 1.05),
main = paste0("Stage", climbs$tappa[i],"\n",climbs$gpm[i]),
cex.main = .85,
cex.axis = .8)
}
})
climbs_l <- split(climbs,climbs$tappa)
n <- lapply(climbs_l,function(x) nrow(x) + 1)
for(i in 1:length(climbs_l)){
if(n[i] != 6){
for(j in n[[i]]:5){
climbs_l[[i]][j, ] <- NA
}
}
}
climbs_full <- do.call(rbind, climbs_l)
par(mfrow = c(19,5), mar = c(2,2,2,2))
x <- lapply(1:nrow(climbs_full), function(i) {
#create data
x <- c(0, climbs_full$`lungh.(km)`[i])
y <- c(0, climbs_full$`disl.(m)`[i])
#if no data plot empty else plot climb
if(is.na(x[2])) {
plot(0,0,type = "n", axes = FALSE,ann = FALSE)
} else {
x_pol <- seq(x[1],x[2],length.out = 10000)
y_pol <- seq(y[1],y[2], length.out = 10000)
#select colour
col_h <- "black"
if(climbs_full$cat[i] == "2") {col_h <- "red"} else
if(climbs_full$cat[i] == "3") {col_h <- "orange"} else
if(climbs_full$cat[i] == "4") {col_h <- "green"}
#plot
plot(x_pol,y_pol,
type = "h",
col = col_h,
xlab = "Distance (km)",
ylab = "Elevantion Diff.(m)",
xlim = c(0,max(climbs$`lungh.(km)`) * 1.05),
ylim = c(0,max(climbs$`disl.(m)`) * 1.05),
main = paste0("Stage", climbs$tappa[i],"\n",climbs$gpm[i]),
cex.main = .85,
cex.axis = .8)
}
})
devtools::check()
devtools::check()
devtools::check()
head(climbs)
devtools::check()
?iconv
climbs
iconv(climbs$arrivo,from="utf-8",to="ASCII")
iconv(climbs$arrivo,from="utf-8",to="latin1")
head(climbs)
climbs[, c(2,3,4,8)] <- apply(climbs[, c(2,3,4,8)], 2, iconv,from="utf-8",to="latin1")
climbs
gsub("\r","-",climbs$arrivo)
climbs$arrivo <- gsub("\r","-",climbs$arrivo)
devtools::use_data(climbs,overwrite = TRUE)
devtools::check()
devtools::build_vignettes()
devtools::check()
library(giro2019)
par(mfrow = c(10,4), mar = c(2,2,2,2))
x <- lapply(1:nrow(climbs), function(i) {
#create data
x <- c(0, climbs$`lungh.(km)`[i])
y <- c(0, climbs$`disl.(m)`[i])
x_pol <- seq(x[1],x[2],length.out = 10000)
y_pol <- seq(y[1],y[2], length.out = 10000)
#select colour
col_h <- "black"
if(climbs$cat[i] == "2") {col_h <- "red"} else
if(climbs$cat[i] == "3") {col_h <- "orange"} else
if(climbs$cat[i] == "4") {col_h <- "green"}
#plot
plot(x_pol,y_pol,
type = "h",
col = col_h,
xlab = "Distance (km)",
ylab = "Elevantion Diff.(m)",
xlim = c(0,max(climbs$`lungh.(km)`) * 1.05),
ylim = c(0,max(climbs$`disl.(m)`) * 1.05),
main = paste0("Stage", climbs$tappa[i],"\n",climbs$gpm[i]),
cex.main = .8)
})
climbs_l <- split(climbs,climbs$tappa)
n <- lapply(climbs_l,function(x) nrow(x) + 1)
for(i in 1:length(climbs_l)){
if(n[i] != 6){
for(j in n[[i]]:5){
climbs_l[[i]][j, ] <- NA
}
}
}
climbs_full <- do.call(rbind, climbs_l)
climbs_full
